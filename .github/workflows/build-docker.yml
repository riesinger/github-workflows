name: Build docker image

on:
  workflow_call:
    inputs:
      image-base-name:
        required: false
        type: string
        default: ghcr.io/riesinger
        description: Base name of the docker image. Defaults to ghcr.io/riesinger
      image-name:
        required: true
        type: string
        description: Name of the docker image. The input image-base-name will be prepended to this.
      working-directory:
        required: false
        type: string
        description: Directory to run the docker build command in. Defaults to the root of the repository.
        default: .
      platforms:
        required: false
        type: string
        description: Platforms to build for. Defaults to linux/amd64,linux/arm64,linux/arm/v7
        default: linux/amd64,linux/arm64,linux/arm/v7

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.image-base-name }}/${{ inputs.image-name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.working-directory }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ inputs.platforms }}
